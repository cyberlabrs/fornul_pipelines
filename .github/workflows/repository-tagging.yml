name: Repository tagging

on:
  pull_request:
    types: [ closed ]
    branches: [main]

jobs:
  release:
    if: github.event.pull_request.merged == true && !contains(github.event.pull_request.labels.*.name, 'no_release')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Looking for patch changes
      if: ${{contains(github.event.pull_request.labels.*.name, 'version:patch')}}
      run: echo "NEW_VERSION=$(npm version patch --no-git-tag-version --tag-version-prefix="")" >> $GITHUB_ENV

    - name: Looking for minor changes 
      if:  ${{contains(github.event.pull_request.labels.*.name, 'version:minor')}}
      run: echo "NEW_VERSION=$(npm version minor --no-git-tag-version --tag-version-prefix="")" >> $GITHUB_ENV

    - name: Looking for major changes
      if:  ${{contains(github.event.pull_request.labels.*.name, 'version:major')}}
      run: echo "NEW_VERSION=$(npm version major --no-git-tag-version --tag-version-prefix="")" >> $GITHUB_ENV
      
    - name: Push tag
      run: |
        git config --global user.email "new_version@fornul.io"
        git config --global user.name "Github Action"
        git tag -a -m "new release" $NEW_VERSION
        git add .
        git commit -m "new version"
        git push origin main -f --tags